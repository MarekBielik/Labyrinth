/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import labyrinth.Labyrinth;

/**
 *
 * @author marek
 */
public class GuiF extends javax.swing.JFrame {

    protected MenuP menu;
    protected GameP board;
    
    /**
     * Creates new form MenuGui
     */
    public GuiF() {
        
        setTitle("Labyrinth");
        this.setVisible(true);
        initComponents();

        displayMenu();
           
        pack();
    }
    
    public void reDrawBoard() {
        if (board != null) {
            board.setVisible(false);
            board.revalidate();
            board.removeAll();
            board = new GameP();
            this.add(board);
        }
        else {
            hideMenu();
            board = new GameP();
            this.add(board);
        }
    }
    
    public void displayBoard() {
        board = new GameP();
        this.add(board);
    }
    
    public void hideMenu() {
        menu.setVisible(false);
    }
    
    public void displayMenu() {
        menu = new MenuP();
        this.add(menu);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser2 = new javax.swing.JFileChooser();
        jFileChooser3 = new javax.swing.JFileChooser();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileM = new javax.swing.JMenu();
        LoadGameMI = new javax.swing.JMenuItem();
        SaveGameMI = new javax.swing.JMenuItem();
        ExitGameMI = new javax.swing.JMenuItem();
        EditM = new javax.swing.JMenu();
        UndoMI = new javax.swing.JMenuItem();

        jFileChooser3.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.FlowLayout());

        FileM.setText("File");

        LoadGameMI.setText("Load Game");
        LoadGameMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadGameMIActionPerformed(evt);
            }
        });
        FileM.add(LoadGameMI);

        SaveGameMI.setText("Save Game");
        SaveGameMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveGameMIActionPerformed(evt);
            }
        });
        FileM.add(SaveGameMI);

        ExitGameMI.setText("Exit Game");
        ExitGameMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitGameMIActionPerformed(evt);
            }
        });
        FileM.add(ExitGameMI);

        jMenuBar1.add(FileM);

        EditM.setText("Edit");

        UndoMI.setText("Undo");
        UndoMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoMIActionPerformed(evt);
            }
        });
        EditM.add(UndoMI);

        jMenuBar1.add(EditM);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void LoadGameMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadGameMIActionPerformed
        JFileChooser loadGameF = new JFileChooser();
        loadGameF.setVisible(true);
        
        int result = loadGameF.showOpenDialog(loadGameF);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            this.setEnabled(true);
            loadGameF.setVisible(false);
            File f = loadGameF.getSelectedFile();
            String filename = f.getAbsolutePath();
            ObjectInputStream objectinputstream = null;
            FileInputStream streamIn = null;
            try {
                streamIn = new FileInputStream(filename);
                objectinputstream = new ObjectInputStream(streamIn);
                Labyrinth.moveStack = (Stack<byte[]>) objectinputstream.readObject();
                Labyrinth.restoreMove();

            } catch (Exception e) {
                System.out.println("wrong file");
            }finally {
                if(objectinputstream != null){
                    try {
                        objectinputstream .close();
                    } catch (IOException ex) {
                        Logger.getLogger(GuiF.class.getName()).log(Level.SEVERE, null, ex);
                    }
                  } 
                }
        }
        else if (result == JFileChooser.CANCEL_OPTION) {
                this.setEnabled(true);
                loadGameF.setVisible(false);
        }
        
        
    }//GEN-LAST:event_LoadGameMIActionPerformed

    private void ExitGameMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitGameMIActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitGameMIActionPerformed

    private void SaveGameMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveGameMIActionPerformed
        // TODO add your handling code here:
        JFileChooser saveGameF = new JFileChooser();
        saveGameF.setVisible(true);
 
        int result = saveGameF.showSaveDialog(saveGameF);
        if (result == JFileChooser.APPROVE_OPTION) {
            System.err.println("save");
            this.setEnabled(true);
            saveGameF.setVisible(false);
            File f = saveGameF.getSelectedFile();
            String filename = f.getAbsolutePath();
            FileOutputStream fout = null;
            try {
                fout = new FileOutputStream(filename);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GuiF.class.getName()).log(Level.SEVERE, null, ex);
            }
            ObjectOutputStream oos = null;
            try {
                oos = new ObjectOutputStream(fout);
            } catch (IOException ex) {
                Logger.getLogger(GuiF.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                oos.writeObject(Labyrinth.moveStack);
            } catch (IOException ex) {
                Logger.getLogger(GuiF.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else if (result == JFileChooser.CANCEL_OPTION) {
                System.err.println("Cancel was selected");
                this.setEnabled(true);
                saveGameF.setVisible(false);
        }
    }//GEN-LAST:event_SaveGameMIActionPerformed

    private void UndoMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoMIActionPerformed
        // TODO add your handling code here:
        System.out.println("Undo");
        Labyrinth.restoreMove();
    }//GEN-LAST:event_UndoMIActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu EditM;
    private javax.swing.JMenuItem ExitGameMI;
    private javax.swing.JMenu FileM;
    private javax.swing.JMenuItem LoadGameMI;
    private javax.swing.JMenuItem SaveGameMI;
    private javax.swing.JMenuItem UndoMI;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JFileChooser jFileChooser3;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
